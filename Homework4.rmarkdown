---
title: "Homework 4"
author: "Rylee Pupa"
format: docx
editor: visual
execute: 
  warning: false
  message: false
---

```{r}
library(here)
library(janitor)
library(tidyverse)
library(naniar)
library(visdat)
library(tidyverse)
library(here)
library(lterdatasampler)
library(performance)
library(broom)
library(flextable)
library(ggeffects)
library(car)
```


1.  Write your null and alternative hypotheses in mathematical and biological terms.
    -   null: fish length does not predict fish weight for trout perch across all sample years
        -   math: In statistical terms, H0: x̄a = x̄b??
    -   alternative: fish length does not not predict fish weight for trout perch across all sample years
        -   math: HA: x̄a is not equal to x̄b in alternative??


```{r}
#reading in files using here function, clean names to make lowercase and more readable
fish <- read_csv(here("data", "ntl6_v12.csv")) %>% 
        clean_names()

#filter fish to only include trout perch
trout_perch <- fish %>% 
        filter(spname == "TROUTPERCH")
```

```{r}
#2.visualize missing data
gg_miss_var(trout_perch)
#Caption: There is missing data for sex, flag, fish part, sample, type, and weight. There are 200 missing data values for weight, which is the only missing data relevant to our hypothesis. 
```

```{r exploratory visuals}
#plotting points to explore if check if there may be a linear relationship in the data
ggplot(data = trout_perch, aes(x = length, y = weight)) +
    geom_point()
```

```{r}
#3 running our linear tests (can check assumptions from this)
#creating a linear model of the length and weight
troutperch_model <- lm(weight ~ length, data = trout_perch)

#make pane show grid of plots for linear model
par(mfrow = c(2,2))
plot(troutperch_model) 
  
#to turn off two by two grid 
#dev.off()

#remove outliers
#5) For each diagnostic plot, describe in 1-2 sentences what it is showing you, and what youdecide after looking at the plot.

```

```{r}
#storing our summary model as an object 
model_summary <- summary(troutperch_model)

#storing ANOVA table as an object
model_anova <- anova(troutperch_model)

#6) displaying results from summary using the model object
model_summary

model_anova
```


summarizing model in a table


```{r}
#7 creating a table that summarizes the anova table 

model_anova_table <- tidy(model_anova) %>% 
    #rounding the statistics, sum of mean squares and sum of squares, to two digits
    mutate(across(sumsq:meansq, ~ round(.x, digits = 2))) %>% 
    #round the F-statistic value to have 2 digits
    mutate(statistic = round(statistic, digits = 2)) %>% 
    ##replace the p value with < 0.001 rather than a super small number
    mutate(p.value = case_when(p.value < 0.001 ~ "< 0.001")) %>% 
    #rename the length to be more proper
    mutate(term = case_when(term == "length" ~ "Length", TRUE ~ term)) %>% 
    #create a flex table object from the data frame
    flextable() %>% 
    # change the header labels to be meaningful??
    set_header_labels(df = "Degrees of Freedom", 
                    sumsq = "Sum of Squares",
                    meansq = "Mean Squares",
                    statistic = "F-statistic",
                    p.value = "P-value")

model_anova_table
```


					

7.  In 1-2 sentences, describe how the ANOVA table relates to the information you get from the **summary()** object

8.  In 2-3 sentences, summarize your results in prose with in-text references to test results.
    Include all relevant information.


```{r}
#10) creating visualization with model predictions and confidence intervals 

#find model predictions for the linear model using ggpredict 
troutperch_predict <- ggpredict(troutperch_model, terms = "length")
troutperch_predict

#plotting predictions from the ggpredict, with length on x and weight on y
predict_plot <- ggplot(data = troutperch_model, 
                       aes(x = length, y = weight)) +
  #plotting the troutperch data lone
  geom_point() +
  #plotting predictions of linear model, changing aesthetics of plot line
  geom_line(data = troutperch_predict, 
              aes(x = x, y = predicted), 
              color = "red", linewidth = 0.8) +
  #plotting the confidence interval from the gg predict function (95%)
  geom_ribbon(data = troutperch_predict, 
              aes(x = x, y = predicted, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +

  #theme and meaningful labels, expand on caption
  theme_classic() +
  labs(x = "Length",
       y = "Weight", caption = "Model predictions")

predict_plot
```

